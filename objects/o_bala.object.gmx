<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_dibujable</parentName>
  <maskName>d_coli0</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_unicoid(id); // crea variable idweb
direction = random(360);
depth = -y;
reloj_fin = 1.5; // tiempo para desaparecer en s
grupo = m_grupo_hostil;
origen = -1; // ind de jugador en servidor o -1 si no jugador
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reloj_fin -= dt;
if reloj_fin &lt;= 0 {
    instance_destroy();
    exit; }

var otro;
var vvv = 600 * dt;
var ddd = point_distance(x, y,
    x + lengthdir_x(vvv, direction), y + lengthdir_y(vvv, direction));
var paso = ddd / max(1, ceil(ddd / 10));
for (var i = 0; i &lt; ceil(ddd / 10); i++) {
    x += lengthdir_x(paso, direction);
    y += lengthdir_y(paso, direction);
    if place_meeting(x, y, o_solido) {
        s_udp_evento(m_udp_elibala, x, y, 1, idweb,
            -1, -1, -1, -1, -1, -1, -1);
        instance_destroy();
        exit;
    }
    else {
        otro = instance_place(x, y, o_movil);
        if otro != noone {
            if otro.grupo != grupo and !(grupo &lt; m_grupos and
                    otro.object_index == o_campesino) {
                
                // $ hacer damage
                
                s_udp_evento(m_udp_elibala, x, y, 1, idweb,
                    -1, -1, -1, -1, -1, -1, -1);
                instance_destroy();
                exit;
            }
        }
    }
}
depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_sombra, 0, x, y);
draw_sprite_ext(d_arma, 11, x, y - 55, 1, 1, direction + 90, s_colorgrupo(grupo), 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
