<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_movil</parentName>
  <maskName>d_coli1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// auxiliares de fisicas y ejecucion
antesuelo_x = x;
antesuelo_y = y;
antecolision = true;

// variables basicas del individuo
x += random_range(-1, 1);
y += random_range(-1, 1);
masa = 50;
velocidad = 80;
s_unicoid(id); // crea variable idweb
genero = choose(0, 1);
grupo = m_grupo_pueblo;

// para dibujado y sincronizacion LAN
xi = x;
yi = y;
depth = -y;

// variables para animacion oscilante y otras
for (var i = 6; i &gt; -1; i--) {
    reloj_anima[i] = random(1);
    anima[i] = 0; // 0:cuerpo, 1:cabeza, 2-4:manoi, 3-5:manod, 6:pies
}
reloj_rojo = 0; // para ver impacto rojizo

// variables de parametros e items
vida = 1;

// variables para la IA
reloj_errar = irandom(1);
mx = x;
my = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// animaciones
s_anima(id, 0, 2.5, 4, 0); // cuerpo
s_anima(id, 1, 2.1, 3, 0); // cabeza
s_anima(id, 2, 1.6, 2, 0); // manoi x
s_anima(id, 3, 1.6, 2, 0); // manod x
s_anima(id, 4, 1.8, 6, 0); // manoi y
s_anima(id, 5, 1.8, 6, 0); // manod y
s_anima(id, 6, 0.6, 4, 4); // pies

// inteligencia artificial
if servidor {
    s_errar(id, 10, 0.5, 0.333, o_zombie, 600);
    s_colision(id);
    if s_mover(id, mx, my, true) {
        reloj_errar = 0;
    }
    s_previene_escape(id, true);
}

// sincronizar con lo visual
s_sincroniza_xy(id);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// colores a aplicar
var cpiel = make_colour_rgb(170, 200, 190);
var cvivo = make_colour_rgb(200, 180, 160);
if reloj_rojo != 0 { // golpeado
    cpiel = merge_colour(cpiel, c_red, 0.5);
    cvivo = merge_colour(cvivo, c_red, 0.5); }

// sombra
draw_sprite(d_sombra, 3, xi, yi);

// pies
if point_distance(x, y, xi, yi) &gt; 4 {
    draw_sprite_ext(d_unidad, 6, xi - 9, yi - anima[6], 1, 1, 0, cpiel, 1);
    draw_sprite_ext(d_unidad, 6, xi + 12, yi - 8 + anima[6], 1, 1, 0, cpiel, 1);
}
else {
    draw_sprite_ext(d_unidad, 6, xi - 9, yi, 1, 1, 0, cpiel, 1);
    draw_sprite_ext(d_unidad, 6, xi + 12, yi, 1, 1, 0, cpiel, 1);
}

// cuerpo
draw_sprite_ext(d_unidad, 4 + genero, xi, yi - anima[0], 1, 1, 0, cpiel, 1);
draw_sprite_ext(d_vestido, 8 + genero, xi, yi - anima[0], 1, 1, 0, cvivo, 1);

// cabeza
draw_sprite_ext(d_unidad, 3, xi, yi - anima[0] - anima[1], 1, 1, 0, cpiel, 1);
if genero == 0 {
    draw_sprite_ext(d_maspelos, 1, xi, yi - anima[0] - anima[1], 1, 1, 0, cvivo, 1); }

// mano izquierda
//draw_sprite_ext(d_unidad, 7, xi - anima[2], yi - anima[0] - anima[4], 1, 1, 0, cpiel, 1);

// mano derecha
//draw_sprite_ext(d_unidad, 8, xi + anima[3], yi - anima[0] - anima[5], 1, 1, 0, cpiel, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
