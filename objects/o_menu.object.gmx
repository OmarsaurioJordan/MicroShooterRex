<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>o_menu</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_ventana();
randomize();
if !instance_exists(o_udp) { instance_create(0, 0, o_udp); }

// variables del jugador
ini_open("config.ini");
grupo = real(ini_read_string("juego", "grupo", string(irandom(m_grupos - 1))));
genero = real(ini_read_string("juego", "genero", string(choose(0, 1))));
pelo = real(ini_read_string("juego", "pelo", string(irandom(sprite_get_number(d_pelo) - 1))));
ini_close();
// animacion
for (var i = 5; i &gt; -1; i--) {
    reloj_anima[i] = random(1);
    anima[i] = 0; // 0:cuerpo, 1:cabeza, 2-4:manoi, 3-5:manod
}

// crear botones
var aux;
aux = instance_create(260, 307, o_boton);
    aux.tipo = m_boton_nombre;
aux = instance_create(153, 443, o_boton);
    aux.tipo = m_boton_pelo1;
aux = instance_create(390, 443, o_boton);
    aux.tipo = m_boton_pelo2;
aux = instance_create(153, 587, o_boton);
    aux.tipo = m_boton_grupo1;
aux = instance_create(390, 587, o_boton);
    aux.tipo = m_boton_grupo2;
aux = instance_create(640, 666, o_boton);
    aux.tipo = m_boton_servidor;
aux = instance_create(793, 666, o_boton);
    aux.tipo = m_boton_servifoto;
aux = instance_create(926, 666, o_boton);
    aux.tipo = m_boton_cliente;
aux = instance_create(729, 208, o_boton);
    aux.tipo = m_boton_ip;
aux = instance_create(70, 68, o_boton);
    aux.tipo = m_boton_masg;
aux = instance_create(964, 68, o_boton);
    aux.tipo = m_boton_cerrar;
aux = instance_create(804, 68, o_boton);
    aux.tipo = m_boton_full;
aux = instance_create(708, 503, o_boton);
    aux.tipo = m_boton_fuerte;
aux = instance_create(708, 398, o_boton);
    aux.tipo = m_boton_pirata;
aux = instance_create(708, 302, o_boton);
    aux.tipo = m_boton_regalos;
aux = instance_create(865, 503, o_boton);
    aux.tipo = m_boton_bandera;
aux = instance_create(865, 398, o_boton);
    aux.tipo = m_boton_zombie;
aux = instance_create(865, 302, o_boton);
    aux.tipo = m_boton_otro;
aux = instance_create(269, 686, o_boton);
    aux.tipo = m_boton_genero;
aux = instance_create(170, 68, o_boton);
    aux.tipo = m_boton_sonido;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// comenzar cliente

with o_boton {
    if tipo == m_boton_ip {
        o_udp.sip = texto; } }
o_udp.sport = 0;
if string_count(":", o_udp.sip) == 1 {
    var len = string_length(o_udp.sip);
    var pos = string_pos(":", o_udp.sip);
    if pos &lt; len and pos &gt; 1 {
        o_udp.sport = real(string_copy(o_udp.sip, pos + 1, len - pos));
        o_udp.sip = string_copy(o_udp.sip, 1, pos - 1);
        // enviar solicitud de conexion
        var buf = buffer_create(5, buffer_grow, 1);
        buffer_seek(buf, buffer_seek_start, 0);
        buffer_write(buf, buffer_u8, m_udp_conexion);
        buffer_write(buf, buffer_u8, grupo);
        buffer_write(buf, buffer_u8, genero);
        buffer_write(buf, buffer_u8, pelo);
        with o_boton {
            if tipo == m_boton_nombre {
                buffer_write(buf, buffer_string, texto); } }
        buffer_write(buf, buffer_string, version);
        network_send_udp(o_udp.conexion, o_udp.sip, o_udp.sport,
            buf, buffer_tell(buf));
        buffer_delete(buf);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// comenzar servidor

s_ini_inicio();
var fil = "mi_mapa.png";
if !file_exists("mi_mapa.png") {
    var lista;
    var n = 0;
    while file_exists("mapa" + string(n) + ".png") {
        lista[n] = "mapa" + string(n) + ".png";
        n++;
    }
    fil = lista[irandom(n - 1)];
}
var spr = sprite_add(fil, 1, false, false, 0, 0);
room_set_width(w_mundo, sprite_get_width(spr) * m_mapa_mundo);
room_set_height(w_mundo, sprite_get_height(spr) * m_mapa_mundo);
sprite_delete(spr);
file_copy(fil, "mapa_actual.png");
o_udp.sip = "127.0.0.1";
o_udp.sport = o_udp.port;
room_goto(w_mundo);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// calculo global del delta de tiempo
dt = min(delta_time * 0.000001, 0.25);

if mouse_check_button_pressed(mb_left) {
    with o_boton {
        foco = false; }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// animaciones
s_anima(id, 0, 2.5, 4, 0); // cuerpo
s_anima(id, 1, 2.1, 3, 0); // cabeza
s_anima(id, 2, 1.6, 2, 0); // manoi x
s_anima(id, 3, 1.6, 2, 0); // manod x
s_anima(id, 4, 1.8, 6, 0); // manoi y
s_anima(id, 5, 1.8, 6, 0); // manod y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("config.ini");
ini_write_string("juego", "grupo", string(grupo));
ini_write_string("juego", "genero", string(genero));
ini_write_string("juego", "pelo", string(pelo));
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_titulo, 0, 490, 70);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_text_transformed_colour(640, 122, "v" + version, 1.3, 1.3, 0,
    c_black, c_black, c_black, c_black, 1);
draw_set_valign(fa_top);
draw_text_transformed_colour(35, 160, "Omwekiatl", 1.6, 1.6, 0,
    c_black, c_black, c_black, c_black, 1);
draw_set_valign(fa_bottom);
draw_text_transformed_colour(35, 730, "Port: " + string(o_udp.port), 1.6, 1.6, 0,
    c_black, c_black, c_black, c_black, 1);


// dibujar tipejo
var cpiel = make_colour_rgb(240, 190, 160);
var cvivo = s_colorgrupo(grupo);
var xi = 264;
var yi = 585;
var esc = 2;
// pies
draw_sprite_ext(d_unidad, 6, xi - 9 * esc, yi, esc, esc, 0, cpiel, 1);
draw_sprite_ext(d_unidad, 6, xi + 12 * esc, yi, esc, esc, 0, cpiel, 1);
draw_sprite_ext(d_vestido, 1, xi - 9 * esc, yi, esc, esc, 0, cvivo, 1);
draw_sprite_ext(d_vestido, 1, xi + 12 * esc, yi, esc, esc, 0, cvivo, 1);
// cuerpo
draw_sprite_ext(d_unidad, 1 + genero, xi, yi - anima[0] * esc, esc, esc, 0, cpiel, 1);
draw_sprite_ext(d_vestido, 2 + genero, xi, yi - anima[0] * esc, esc, esc, 0, cvivo, 1);
// cabeza
draw_sprite_ext(d_unidad, 0, xi, yi - anima[0] * esc - anima[1] * esc, esc, esc, 0, cpiel, 1);
draw_sprite_ext(d_pelo, pelo, xi, yi - anima[0] * esc - anima[1] * esc, esc, esc, 0, cvivo, 1);
// mano izquierda
draw_sprite_ext(d_unidad, 7, xi - anima[2], yi - anima[0] * esc - anima[4] * esc, esc, esc, 0, cpiel, 1);
// mano derecha
draw_sprite_ext(d_unidad, 8, xi + anima[3], yi - anima[0] * esc - anima[5] * esc, esc, esc, 0, cpiel, 1);

draw_sprite_ext(d_mouse, 0, mouse_x, mouse_y, 2, 2, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
